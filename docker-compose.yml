version: "3.4"

volumes:
  postgres_data:
  redis_data:

networks:
  frontend:
  backend:

services:
  nginx:
    image: nginx:alpine
    # Map the host port 80 to container port 80:
    ports:
    - 80:80
    volumes:
    - type: bind
      source: ./config/dev.nginx.conf
      target: /etc/nginx/nginx.conf
      read_only: true
    - type: bind
      source: ./public
      target: /usr/src/public
      read_only: true
    depends_on:
    - web
    networks:
    - frontend

  test: &app
    image: vovimayhem/rails-docker-demo:development
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    volumes:
    - .:/usr/src
    depends_on:
    - postgres
    networks:
    - backend
    entrypoint: /usr/src/bin/dev-entrypoint
    command: guard
    environment:
      DATABASE_URL: postgres://postgres:ejemplo@postgres:5432/ejemplo_test
      RAILS_ENV: test
      RACK_ENV: test

  web:
    <<: *app
    networks:
    - frontend
    - backend
    command: rails server -p 3000 -b 0.0.0.0
    depends_on:
    - postgres
    - redis
    environment: &app_env
      DATABASE_URL: postgres://postgres:ejemplo@postgres:5432/ejemplo_development
      REDIS_URL: redis://redis:6379/0
      RAILS_ENV: development
      RACK_ENV: development

  worker:
    <<: *app
    networks:
    - backend
    command: sidekiq -c 10
    depends_on:
    - postgres
    - redis
    environment:
      <<: *app_env

  postgres:
    image: postgres:alpine
    volumes:
    - postgres_data:/var/lib/postgresql/data
    networks:
    - backend
    environment:
      POSTGRES_PASSWORD: ejemplo

  redis:
    image: redis:alpine
    volumes:
    - redis_data:/var/lib/redis
    command: redis-server --appendonly yes
    networks:
    - backend
